{"version":3,"file":"static/js/681.e2ca9118.chunk.js","mappings":"+PAIO,SAASA,IACd,IACQC,GADSC,EAAAA,EAAAA,MACUC,MAAnBF,MACRG,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAyBxB,OAvBAI,EAAAA,EAAAA,YAAU,WACmB,SAAAC,IAkB1B,OAlB0BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA3B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAUG,OATKJ,EAAU,CACdK,OAAQ,MACRC,IAAI,sCAADC,OAAwCrB,EAAMsB,GAAE,YACnDC,OAAQ,CAAEC,SAAU,QAASC,KAAM,KACnCC,QAAS,CACPC,OAAQ,mBACRC,cACE,+NAELZ,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGwBW,EAAAA,EAAAA,QAAcf,GAAS,KAAD,EAAvCC,EAAQC,EAAAc,KACdtB,EAAUO,EAASgB,KAAKC,SAAShB,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAiB,GAAAjB,EAAA,SAEjCkB,QAAQC,IAAGnB,EAAAiB,IAAQ,yBAAAjB,EAAAoB,OAAA,GAAAvB,EAAA,mBAEtBwB,MAAA,KAAAC,UAAA,EAnBc,WACY5B,EAAA2B,MAAC,KAADC,UAAA,CAmB3BC,EACF,GAAG,CAACvC,KAGFwC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CACGnC,EAAOqC,QAAU,IAChBJ,EAAAA,EAAAA,KAAA,QAAAE,SAAM,8CAEPnC,EAAOqC,OAAS,GACfrC,EAAOsC,KAAI,SAAAC,GAAG,OACZH,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAkBI,EAAIC,QAAbD,EAAIxB,KACbkB,EAAAA,EAAAA,KAAA,KAAAE,SAAII,EAAIE,YAFAF,EAAIxB,GAGR,QAKlB,C","sources":["components/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\n\nexport function Reviews() {\n  const location = useLocation();\n  const { movie } = location.state;\n  const [review, setReview] = useState([]);\n\n  useEffect(() => {\n    async function detailReview() {\n      const options = {\n        method: 'GET',\n        url: `https://api.themoviedb.org/3/movie/${movie.id}/reviews`,\n        params: { language: 'en-US', page: '1' },\n        headers: {\n          accept: 'application/json',\n          Authorization:\n            'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NDY1ODBlYTRhMDM2MDVkOWE2N2FlM2FhYzRiNjcxZCIsInN1YiI6IjY1ZTEwZGUyMmQ1MzFhMDE0OGJlZWFmYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.8aUIYNFlhoowb4WMuONrqR9k2WqKHNq9SdusAefM7cc',\n        },\n      };\n\n      try {\n        const response = await axios.request(options);\n        setReview(response.data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    detailReview();\n  }, [movie]);\n\n  return (\n    <>\n      <ul>\n        {review.length <= 0 && (\n          <span>We don't have any reviews for this movie.</span>\n        )}\n        {review.length > 0 &&\n          review.map(rev => (\n            <div key={rev.id}>\n              <li key={rev.id}>{rev.author}</li>\n              <p>{rev.content}</p>\n            </div>\n          ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["Reviews","movie","useLocation","state","_useState","useState","_useState2","_slicedToArray","review","setReview","useEffect","_detailReview","_asyncToGenerator","_regeneratorRuntime","_callee","options","response","_context","prev","next","method","url","concat","id","params","language","page","headers","accept","Authorization","axios","sent","data","results","t0","console","log","stop","apply","arguments","detailReview","_jsx","_Fragment","children","_jsxs","length","map","rev","author","content"],"sourceRoot":""}